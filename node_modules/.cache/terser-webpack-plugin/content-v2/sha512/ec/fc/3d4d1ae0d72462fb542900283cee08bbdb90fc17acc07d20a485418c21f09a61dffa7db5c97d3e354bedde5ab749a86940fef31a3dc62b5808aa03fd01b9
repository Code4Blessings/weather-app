{"map":"{\"version\":3,\"sources\":[\"/Users/robinwarden/Desktop/weather-finder/src/components/Titles.js\",\"/Users/robinwarden/Desktop/weather-finder/src/components/Form.js\",\"/Users/robinwarden/Desktop/weather-finder/src/components/Weather.js\",\"/Users/robinwarden/Desktop/weather-finder/src/App.js\",\"/Users/robinwarden/Desktop/weather-finder/src/serviceWorker.js\",\"/Users/robinwarden/Desktop/weather-finder/src/index.js\"],\"names\":[\"Titles\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"Form\",\"onSubmit\",\"getWeather\",\"type\",\"name\",\"placeholder\",\"Weather\",\"weather__info\",\"city\",\"country\",\"temperature\",\"humidity\",\"description\",\"error\",\"API_Key\",\"App\",\"state\",\"undefined\",\"_callee\",\"e\",\"api_call\",\"data\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"sent\",\"json\",\"_this\",\"setState\",\"main\",\"temp\",\"sys\",\"weather\",\"stop\",\"this\",\"components_Titles\",\"components_Form\",\"components_Weather\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Titles = props => (\\n    <div>\\n        <h1 className=\\\"title-container__title\\\">Weather Finder</h1>\\n        <h3 className=\\\"title-container__subtitle\\\">Find our temperature, conditions, and more...</h3>\\n    </div>\\n);\\n\\nexport default Titles;\\n\",\"import React from 'react';\\n\\nconst Form = props => (\\n        <form onSubmit={props.getWeather}>\\n                <input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"City...\\\"/>\\n                <input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Country...\\\"/>\\n                <button>Get Weather</button>\\n            </form>\\n    );\\n\\nexport default Form;\",\"import React from 'react';\\n\\nconst Weather = props => (\\n    <div weather__info>\\n    { \\n        props.city && props.country && <p className=\\\"weather__key\\\">Location: \\n              <span> { props.city }, { props.country }</span>\\n             </p>\\n    }\\n    { \\n        props.temperature && <p className=\\\"weather__key\\\">Temperature: \\n             <span> { props.temperature }</span>\\n        </p> \\n    }\\n    { \\n        props.humidity && <p className=\\\"weather__key\\\">Humidity: \\n              <span> { props.humidity }</span>\\n        </p> \\n    }\\n    { \\n        props.description && <p className=\\\"weather__key\\\">Conditions: \\n             <span> { props.description }</span>\\n        </p>\\n     }\\n    { \\n        props.error && <p className=\\\"weather__error\\\">\\n            <span>  { props.error }</span>\\n        </p>\\n     }\\n</div>\\n);\\n    \\n\\nexport default Weather;\",\"import React, { Component } from 'react';\\nimport Titles from './components/Titles';\\nimport Form from './components/Form';\\nimport Weather from './components/Weather';\\n\\nconst API_Key = \\\"44eef34a228e5eb917149fed3c281695\\\";\\n\\nclass App extends Component {\\n  state = {\\n    temperature: undefined,\\n    city: undefined,\\n    country: undefined,\\n    humidity: undefined,\\n    description: undefined,\\n    error: undefined,\\n  }\\n  getWeather = async (e) => {\\n    e.preventDefault();\\n    const city = e.target.elements.city.value;\\n    const country = e.target.elements.country.value;\\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_Key}&units=metric`);\\n    const data = await api_call.json();\\n    if (city && country) {\\n      this.setState({\\n        temperature: data.main.temp,\\n        city: data.name,\\n        country: data.sys.country,\\n        humidity: data.main.humidity,\\n        description: data.weather[0].description,\\n        error: \\\"\\\"\\n      });\\n    } else {\\n      this.setState({\\n        temperature: undefined,\\n        city: undefined,\\n        country: undefined,\\n        humidity: undefined,\\n        description: undefined,\\n        error: \\\"Please enter values.\\\"\\n      });\\n    }\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <div className=\\\"wrapper\\\">\\n          <div className=\\\"main\\\">\\n            <div className=\\\"container\\\">\\n              <div className=\\\"row\\\">\\n                <div className=\\\"col-xs-5 title-container\\\">\\n                <Titles />\\n                </div>\\n                  <div className=\\\"col-xs-5 form-container\\\">\\n                  <Form  getWeather={this.getWeather}/>\\n                  <Weather \\n                     temperature={this.state.temperature} \\n                     city={this.state.city}\\n                     country={this.state.country}\\n                     humidity={this.state.humidity}\\n                     description={this.state.description}\\n                     error={this.state.error}\\n                  />\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport 'bootstrap/dist/css/bootstrap.min.css'\\nimport \\\"./App.css\\\";\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(27)},16:function(e,t,a){},20:function(e,t,a){},27:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),i=a(3),c=a.n(i),o=(a(16),a(18),a(20),a(1)),s=a.n(o),l=a(4),m=a(5),u=a(6),d=a(8),p=a(7),h=a(9),y=function(e){return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",{className:\"title-container__title\"},\"Weather Finder\"),r.a.createElement(\"h3\",{className:\"title-container__subtitle\"},\"Find our temperature, conditions, and more...\"))},v=function(e){return r.a.createElement(\"form\",{onSubmit:e.getWeather},r.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"City...\"}),r.a.createElement(\"input\",{type:\"text\",name:\"country\",placeholder:\"Country...\"}),r.a.createElement(\"button\",null,\"Get Weather\"))},E=function(e){return r.a.createElement(\"div\",{weather__info:!0},e.city&&e.country&&r.a.createElement(\"p\",{className:\"weather__key\"},\"Location:\",r.a.createElement(\"span\",null,\" \",e.city,\", \",e.country)),e.temperature&&r.a.createElement(\"p\",{className:\"weather__key\"},\"Temperature:\",r.a.createElement(\"span\",null,\" \",e.temperature)),e.humidity&&r.a.createElement(\"p\",{className:\"weather__key\"},\"Humidity:\",r.a.createElement(\"span\",null,\" \",e.humidity)),e.description&&r.a.createElement(\"p\",{className:\"weather__key\"},\"Conditions:\",r.a.createElement(\"span\",null,\" \",e.description)),e.error&&r.a.createElement(\"p\",{className:\"weather__error\"},r.a.createElement(\"span\",null,\"  \",e.error)))},w=\"44eef34a228e5eb917149fed3c281695\",f=function(e){function t(){var e,a;Object(m.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(d.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(r)))).state={temperature:void 0,city:void 0,country:void 0,humidity:void 0,description:void 0,error:void 0},a.getWeather=function(){var e=Object(l.a)(s.a.mark(function e(t){var n,r,i,c;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),n=t.target.elements.city.value,r=t.target.elements.country.value,e.next=5,fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(n,\",\").concat(r,\"&APPID=\").concat(w,\"&units=metric\"));case 5:return i=e.sent,e.next=8,i.json();case 8:c=e.sent,n&&r?a.setState({temperature:c.main.temp,city:c.name,country:c.sys.country,humidity:c.main.humidity,description:c.weather[0].description,error:\"\"}):a.setState({temperature:void 0,city:void 0,country:void 0,humidity:void 0,description:void 0,error:\"Please enter values.\"});case 10:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),a}return Object(h.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"wrapper\"},r.a.createElement(\"div\",{className:\"main\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-xs-5 title-container\"},r.a.createElement(y,null)),r.a.createElement(\"div\",{className:\"col-xs-5 form-container\"},r.a.createElement(v,{getWeather:this.getWeather}),r.a.createElement(E,{temperature:this.state.temperature,city:this.state.city,country:this.state.country,humidity:this.state.humidity,description:this.state.description,error:this.state.error})))))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,2,1]]]);","extractedComments":[]}